#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define CURSOR  1
#define NUMPAD  2
#define NUMBER  3
#define SYMBOL  4

/ {
  chosen {
    zmk,matrix_transform = &five_column_transform;
  };
};

#define COMBO(NAME, KEYPOS) \
    combo_##NAME { \
        timeout-ms = <100>; \
        key-positions = <KEYPOS>; \
        bindings = <&kp NAME>; \
    };

/ {
    combos {
        compatible = "zmk,combos"; \
           COMBO (ESC, 0 1) \
           COMBO (TAB, 1 2) \
    };


macros {
        ZMK_MACRO(inv_qm,
            wait-ms = <10>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N1 &kp KP_N6 &kp KP_N8>
                , <&macro_release &kp LALT>;
        )
    };

// {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "COLEMK";
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  '  |
// |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |
// |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  ?  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
        &kp Q   &kp W   &kp F   &kp P   &kp B           &kp J           &kp L           &kp U           &kp Y           &kp SQT
        &kp A   &kp R   &kp S   &kp T   &kp G           &kp M           &kp N           &kp E           &kp I           &kp  O
        &kp Z   &kp X   &kp C   &kp D   &kp V           &kp K           &kp H           &kp COMMA       &kp DOT         &kp QMARK
        &mo NUMBER      &kp LSHFT       &kp SPACE       &lt CURSOR BSPC &mo NUMPAD      &mo SYMBOL
                        >;
                };

                cursor {
                        label = "CURSOR";
// -----------------------------------------------------------------------------------------
// |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |
// | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |
// |BTCLR|     |     |     |     |   |     |     |     |     |     |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
        &kp ESC         &kp TAB         &none           &none           &none           &none           &none           &kp UP          &none           &none
        &sk LSHFT       &sk LALT        &sk LCTRL       &sk LGUI        &none           &none           &kp LEFT        &kp DOWN        &kp RIGHT       &none
        &none           &kp LC(X)       &kp LC(C)       &kp LC(V)       &none           &none           &none           &none           &none           &none
                                        &kp LGUI        &trans          &kp RET         &none           &trans          &kp RALT
                        >;
                };

                numpad {
                        label = "NUMPAD";
// -----------------------------------------------------------------------------------------
// |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |
// | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |
// |BTCLR|     |     |     |     |   |     |     |     |     |     |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
        &none  &none  &none  &none  &none          &none  &kp N7  &kp N8  &kp N9  &none
        &none  &none  &none  &none  &none          &none  &kp N4  &kp N5  &kp N6  &none
        &none  &none  &none  &none  &none          &kp N0 &kp N1  &kp N2  &kp N3  &none
                &kp LGUI        &trans  &kp SPACE       &kp RET &trans   &kp RALT
                        >;
                };

                lower_layer {
                        label = "NUMBER";
// -----------------------------------------------------------------------------------------
// |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |
// | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |
// |BTCLR|     |     |     |     |   |     |     |     |     |     |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans
   &bt BT_CLR   &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans
                          	        &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                raise_layer {
                        label = "SYMBOL";
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
// |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |
// |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR
   &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH
   &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE
                    	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};